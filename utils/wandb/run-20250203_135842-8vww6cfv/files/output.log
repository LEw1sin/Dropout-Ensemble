2025-02-03 13:58:43,338 - INFO - Namespace(device='cuda:1', channel_weights=[1.0, 2.0, 1.0, 1.0], batch_size=6, num_classes=4, pretrained=False, pretrained_weights='./Synapse_weights_1u1d', lr=0.0001, epochs=500, warmup_epochs=10, dataset_mode='MnMs', max_channel=256, l2_norm=1e-07, patience=15, wandb=True, cache=True, log_dir='../../de_logistics/MnMs_1UNetlinear_02-03-13-58-42/', log_file_path='../../de_logistics/MnMs_1UNetlinear_02-03-13-58-42/training.log')
Epoch 1/500 [Training]:  62%|████████████████████▎            | 116/188 [00:46<00:28,  2.49batch/s]
Traceback (most recent call last):
  File "/data2/lyw/deunet_mem_based/train.py", line 220, in <module>
    main(args, net)
  File "/data2/lyw/deunet_mem_based/train.py", line 68, in main
    train_acc, train_losses = train_epoch(args, net, optimizer, train_loader, device, epoch, scheduler)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data2/lyw/deunet_mem_based/train.py", line 139, in train_epoch
    train_losses, train_acc, _= process_epoch(args, net, train_loader, device, 'train', optimizer, scaler, scheduler)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data2/lyw/deunet_mem_based/train.py", line 117, in process_epoch
    scaler.step(optimizer)
  File "/home/lyw/anaconda3/envs/unet/lib/python3.11/site-packages/torch/amp/grad_scaler.py", line 457, in step
    retval = self._maybe_opt_step(optimizer, optimizer_state, *args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lyw/anaconda3/envs/unet/lib/python3.11/site-packages/torch/amp/grad_scaler.py", line 351, in _maybe_opt_step
    if not sum(v.item() for v in optimizer_state["found_inf_per_device"].values()):
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lyw/anaconda3/envs/unet/lib/python3.11/site-packages/torch/amp/grad_scaler.py", line 351, in <genexpr>
    if not sum(v.item() for v in optimizer_state["found_inf_per_device"].values()):
               ^^^^^^^^
KeyboardInterrupt
